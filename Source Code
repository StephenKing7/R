library(packagename)  #load functions into R
library()  # see list of installed packages
install.packages('packagename')  #install a package
source('myScript.R')  # read and execute text file

x <- 1 # assign local variable
x <<- 1 # assign global variable

str(dataset)  # get information about dataset

write.csv(x, file='filename', row.names=FALSE)  # save to csv format
mydata <- read.csv('filename', header=FALSE, as.is=TRUE)  # read csv files
mydata <- read.csv('http://www.example.com/download/data.csv')  # read directly from Web
mydata <- read.table("~/Desktop/Data.txt", header = TRUE, sep = "\t") # read tabular data
mydata <- read.table('http://www.example.com/download/data.csv') # read directly from Web

rm() #removes variables from workspace
rm(list = ls())

Simple Statistics:
mean(x, na.rm=TRUE)  #override NA values
median(x)
sd(x)
var(x)
cor(x,y)
cov(x,y)

as.character(x)
as.complex(x)
as.numeric(x)
as.integer(x)
as.logical(x)

runif(1)  # generate one uniform random number between 0 and 1

seq(from=0, to=20, by=5)
seq(from=0, to=100, length.out=5)

rep(pi, times=5)

A <- 1:6
dim(A) <- c(2,3)  # create a matrix with 2 rows and 3 columns

C <- list(1, 2, 3, "X", "Y", "Z")
dim(C) <- c(2,3) #  turn a list into a matrix with 2 rows and 3 columns

lst[[n]]  #  this is an element - the nth element of lst
lst[n]  #  this is a list, not an element

all.cols <- cbind(dfrm1, dfrm2)  #  combine dataframes side by side
all.rows <- rbind(dfrm1, dfrm2)  #  stack the rows of two dataframes

attach(myData)
subset(myData, colName > 10, select=c(colName1, colName2)

summary(myData)  #  calculates summary statistics for data

barplot(x, col='slategray3')

h <- hist(lynx, breaks = 11, 
          freq = FALSE, 
          col = "thistle1", 
          main = "Histogram of Annual Canadian Lynx Trappings\n1821-1934", 
          xlab = "Number of Lynx Trapped")

histogram arguments:
xlim = c()
ylim = c()
xlab = “”
ylab = “”
main = “”
border = 0 or 1
col = 
lwd = 3 # pixel-width of line
hist(dataset$colName, prob = TRUE)
lines(density(dataset$colName))
rug(dataset$colName)

curve(dnorm(x, mean = mean(lynx), sd = sd(lynx)), 
      col = "thistle4", 
      lwd = 2, 
      add = TRUE)

Forward Stepwise Multiple Regression:
reg0 <- lm(RTEN ~ 1, data = USJudgeRatings)

regf <- step(reg0, direction = "forward", scope = (~ CONT + INTG + DMNR + DILG + CFMG + DECI + PREP + FAMI + ORAL + WRIT + PHYS), data = USJudgeRatings, trace = 0)


Backward Stepwise Multiple Regression:
reg1 <- lm(RTEN ~ CONT + INTG + DMNR + DILG + CFMG + DECI + PREP + FAMI + ORAL + WRIT + PHYS, data = USJudgeRatings)

regb <- step(reg1, direction = "backward", trace = 0)

pnorm(q = 0, mean = , sd = , lower.tail = FALSE)  # what are the chances that the data is > 0

Pairwise T Test
library(reshape)
Target <- subset(mydata, Target == "Target", select = c(Vet_Locator, Care_Services, Communicate, Dog_Parks, Venues, Pet_Share, Breed_Info))
T <- melt(Target)
T <- pairwise.t.test(T$value, T$variable, p.adjust = "none") # test for statistical significant
